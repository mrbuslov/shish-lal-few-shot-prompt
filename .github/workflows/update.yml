name: Deploy to Production

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to production server
        run: |
          # Setup SSH
          mkdir -p ~/.ssh
          echo "${{ secrets.DEPLOY_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.DEPLOY_HOST }} >> ~/.ssh/known_hosts
          
          # Deploy
          ssh -o StrictHostKeyChecking=no ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} << EOF
            set -e  # Exit on any error
            set -x  # Print commands for debugging
            
            cd ${{ secrets.DEPLOY_PATH }} || { echo "❌ Failed to cd to ${{ secrets.DEPLOY_PATH }}"; exit 1; }
            
            echo "🚀 Deploying..."
            git pull origin main || { echo "❌ Git pull failed"; exit 1; }
            
            mkdir -p docker/nginx/sites-enabled temp files/user_reports logs
            
            # Enable nginx site configurations
            ln -sf ../sites-available/drlal.com.au docker/nginx/sites-enabled/drlal.com.au
            ln -sf ../sites-available/yourscribe.com.au docker/nginx/sites-enabled/yourscribe.com.au
            
            docker compose -f docker-compose.prod.yml build || { echo "❌ Docker build failed"; exit 1; }
            docker compose -f docker-compose.prod.yml down
            docker compose -f docker-compose.prod.yml up -d || { echo "❌ Docker up failed"; exit 1; }
            
            # Set up SSL certificates for new domains if needed
            if [ ! -f /etc/letsencrypt/live/yourscribe.com.au/fullchain.pem ]; then
              echo "🔒 Setting up SSL for yourscribe.com.au..."
              bash docker/setup-ssl.sh
            fi
            
            # Clean up old unused images
            docker image prune -af
            
            echo "✅ Deployment complete"
          EOF
