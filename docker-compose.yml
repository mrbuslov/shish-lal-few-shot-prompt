version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: docker/Dockerfile
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      mongodb:
        condition: service_healthy
    volumes:
      - ./:/app
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    networks:
      - app-network

  mongodb:
    image: mongo:7.0
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGODB_DB_NAME}
      MONGO_APP_USER: ${MONGO_APP_USER}
      MONGO_APP_PASSWORD: ${MONGO_APP_PASSWORD}
      MONGODB_DB_NAME: ${MONGODB_DB_NAME}
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
      - ./docker/mongo-init.sh:/docker-entrypoint-initdb.d/01-init.sh:ro
    command: ["--auth", "--logpath", "/proc/self/fd/1", "--logappend", "--quiet"]
    healthcheck:
      test: |
        mongosh --quiet --eval "db.adminCommand('ping')" || exit 1
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 40s
    restart: unless-stopped
    networks:
      - app-network

volumes:
  mongodb_data:
  mongodb_config:

networks:
  app-network:
    driver: bridge
